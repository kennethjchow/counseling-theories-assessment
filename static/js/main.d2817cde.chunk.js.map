{"version":3,"sources":["components/Question/Question.js","components/Results/Results.js","components/Assessment/Assessment.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["marks","value","label","Question","props","useState","isFocused","setIsFocused","Box","sx","minWidth","className","id","text","Slider","aria-label","defaultValue","step","valueLabelDisplay","min","max","color","onFocus","e","onBlur","onChange","onSelectQuestionValue","Results","isFirstLoad","setFirstLoad","divRef","useRef","useEffect","current","scrollIntoView","behavior","ref","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","categorySums","map","row","key","border","scope","category","sum","Assessment","questionDataDefault","questionData","obj","questions","setQuestions","hasSubmit","setHasSubmit","setCategorySums","handleQuestionValueChange","event","questionId","newQuestions","matchingIndex","findIndex","x","target","QuestionList","question","Button","onClick","forEach","items","filter","indexOf","reduce","n","push","sort","a","b","parseFloat","sumCategories","variant","App","href","basename","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2817cde.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Slider } from '@mui/material';\nimport './Question.css';\nimport { Box } from '@mui/system';\n\nconst marks = [\n  {\n    value: 1,\n    label: 'Strongly Disagree',\n  },\n  {\n    value: 2,\n    label: '2',\n  },\n  {\n    value: 3,\n    label: '3',\n  },\n  {\n    value: 4,\n    label: 'Neutral',\n  },\n  {\n    value: 5,\n    label: '5',\n  },\n  {\n    value: 6,\n    label: '6',\n  },\n  {\n    value: 7,\n    label: 'Strongly Agree',\n  }\n];\n\nconst Question = (props) => {\n\n  const [isFocused, setIsFocused] = useState(false);\n  const handleFocus = (e) => { setIsFocused(true); }\n  const handleBlur = (e) => { setIsFocused(false); }\n\n  return (\n    <Box sx={{ minWidth: 600 }} className=\"question-container\" >\n      <div className=\"question-text\">\n        {props.id}. {props.text}\n      </div>\n      <Box className=\"question-slider\">\n        <Slider\n          aria-label=\"qSlider\"\n          defaultValue={4}\n          step={1}\n          marks={marks}\n          valueLabelDisplay=\"auto\"\n          min={1}\n          max={7}\n          color={isFocused ? \"secondary\": \"primary\"}\n          onFocus={handleFocus} onBlur={handleBlur}\n          onChange={(e) => props.onSelectQuestionValue(e, props.id)}\n        />\n      </Box>\n    </Box>\n  );\n}\n\n\nexport default Question;\n","import React, { useRef, useEffect, useState } from 'react';\nimport './Results.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n\nconst Results = (props) => {\n\n  const [isFirstLoad, setFirstLoad] = useState(true);\n  const divRef = useRef(null);\n\n  useEffect(() => {\n    if (isFirstLoad) {\n      divRef.current.scrollIntoView({ behavior: 'smooth' });\n      setFirstLoad(false);\n    }\n  });\n\n\n  return (<div ref={divRef}>\n    <h1>Results </h1>\n    <TableContainer component={Paper} >\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Category</TableCell>\n            <TableCell align=\"right\">Total Score</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.categorySums.map((row) => (\n            <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.category}\n              </TableCell>\n              <TableCell align=\"right\">{row.sum}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  </div>);\n}\n\nexport default Results;\n","import React, { useState } from 'react';\nimport Question from '../Question/Question';\nimport Results from '../Results/Results';\nimport questionData from '../../data/questions.json';\nimport './Assessment.css'\nimport { Button } from '@mui/material';\n\nexport default function Assessment() {\n\n  const questionDataDefault = questionData.map(obj => ({ ...obj, value: 4 }));\n  const [questions, setQuestions] = useState(questionDataDefault);\n  const [hasSubmit, setHasSubmit] = useState(false);\n  const [categorySums, setCategorySums] = useState([]);\n\n  const handleQuestionValueChange = (event, questionId) => {\n    let newQuestions = [...questions];\n    let matchingIndex = newQuestions.findIndex(x => x.id === questionId);\n    newQuestions[matchingIndex].value = event.target.value;\n    setQuestions(newQuestions)\n  }\n\n  const QuestionList = questions.map((question) => {\n    return (<Question key={question.id} onSelectQuestionValue={handleQuestionValueChange} text={question.text} id={question.id} />)\n  });\n\n  const sumCategories = (questions) => {\n    let categorySums = []\n    const categories = [\"Psychoanalytic\", \"Adlerian\", \"Behavioral\", \"Cognitive\", \"Reality\", \"Existential\", \"Person-Centered\", \"Gestalt\", \"Multicultural\", \"Feminist\", \"Family\", \"Solutions-Focused\", \"Narrative\", \"Strengths-Based\", \"Integrative\"]\n    let id = 1\n    categories.forEach(category => {\n      const items = questions.filter(question => question.category.indexOf(category) !== -1);\n      const sum = { \"id\": id, \"category\": category, \"sum\": items.reduce((n, { value }) => n + value, 0) };\n      categorySums.push(sum);\n      id += 1;\n    });\n    return categorySums.sort((a, b) => parseFloat(b.sum) - parseFloat(a.sum));\n  }\n\n  const handleSubmit = () => {\n    setCategorySums(sumCategories(questions))\n    setHasSubmit(true);\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"assessment-container\" >\n        <div>\n          This is an assessment to determine what kinda theory you align more with\n        </div>\n        <div>{QuestionList}</div>\n        <div className=\"buttons-container\">\n          <Button onClick={handleSubmit} variant=\"contained\" className=\"submit-button\">Submit</Button>\n        </div>\n        <div className=\"category-sums\">\n          {hasSubmit &&\n            <Results categorySums={categorySums}></Results>\n          }\n        </div>\n\n      </div>\n    </div>\n  );\n}\n","import './Home.css';\nimport React from 'react';\nimport { Button } from '@mui/material';\n\nfunction App() {\n  return (\n    <div className=\"home-container\">\n      <div className=\"home-center-elements\">\n        <h2>Counseling Theory Assessment</h2>\n        <p>Learn your theoretical orientation</p>\n        <Button color=\"secondary\" variant=\"contained\" href=\"/#/assessment\">Take the quiz</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import './App.css';\nimport Assessment from './components/Assessment/Assessment';\nimport Home from './components/Home/Home';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  HashRouter,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Routes>\n        <Route path='/assessment' element={<Assessment/>} />\n        <Route path=\"/\" element={<Home />} />\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}